{"version":3,"sources":["components/SlidePuzzle.module.css","components/NumberSquare.module.css","helpers/puzzleArr.ts","helpers/SillyGooseError.ts","helpers/images.ts","components/NumberSquare.tsx","components/SlidePuzzle.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Direction","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","isInPosition","n","i","getShuffledPuzzleArr","a","randomMove","some","moveSquare","puzzleArr","emptyIndex","indexOf","isAdjacentIdx","newPuzzleArr","randElement","getMovableIndices","movableIndices","emptyCoord","getCoords","length","isAdjacentCoord","push","getRow","Math","floor","getColumn","b","abs","min","max","ceil","random","randInt","getDirection","indexToMove","LEFT","RIGHT","UP","DOWN","images","fileName","attribution","getRandomImage","NumberSquare","props","children","handleClick","isInPlace","image","position","movedDirection","sorted","row","col","animationClass","numberSquareClass","classNames","clickable","Boolean","styles","empty","inPlace","slideFromBelow","numberSquare","style","backgroundImage","backgroundSize","backgroundPosition","className","onClick","SlidePuzzle","useState","setPuzzleArr","setImage","lastMove","setLastMove","arr","isSorted","canMoveSquare","direction","getMoveRecord","reset","console","log","squares","map","useEffect","slidePuzzle","dangerouslySetInnerHTML","__html","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e1322b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidePuzzle\":\"SlidePuzzle_slidePuzzle__AaIWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberSquare\":\"NumberSquare_numberSquare__2fCLF\",\"empty\":\"NumberSquare_empty__3Kjw3\",\"inPlace\":\"NumberSquare_inPlace__1RL6j\",\"sorted\":\"NumberSquare_sorted__1RWdP\",\"row-0\":\"NumberSquare_row-0__297yS\",\"slideLEFT\":\"NumberSquare_slideLEFT__2h7K5\",\"slide-from-right\":\"NumberSquare_slide-from-right__3jbpj\",\"slideDOWN\":\"NumberSquare_slideDOWN__2B9kM\",\"slide-from-above\":\"NumberSquare_slide-from-above__2SJ7v\",\"slideRIGHT\":\"NumberSquare_slideRIGHT__P1o_f\",\"slide-from-left\":\"NumberSquare_slide-from-left__u4ae2\",\"slideUP\":\"NumberSquare_slideUP__18hqI\",\"slide-from-below\":\"NumberSquare_slide-from-below__ku02A\"};","import SillyGooseError from './SillyGooseError';\n\nexport const getSortedPuzzleArr = (): puzzleArray => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, null];\n\nexport const puzzleToString = (arr: puzzleArray): string => arr.map(valToString).join('');\nexport const stringToPuzzle = (str: string): puzzleArray => str.split('').map(stringToVal);\n\nexport const valToString = (n: number | null): string => n?.toString(16) || '0';\nexport const stringToVal = (s: string): number | null => {\n  const n = parseInt(s, 16);\n  if (!n) return null;\n  return n;\n};\n\nexport const isInPosition = (n: number | null, i: number): boolean => {\n  if (n === null) return false;\n  return n - 1 === i;\n};\n\nexport const getShuffledPuzzleArr = (): puzzleArray => {\n  let a = getSortedPuzzleArr();\n  for (let i = 0; i < 10_000; i++) {\n    a = randomMove(a);\n  }\n\n  while (a.some(isInPosition)) {\n    a = randomMove(a);\n  }\n\n  return a;\n};\n\nexport const moveSquare = (puzzleArr: puzzleArray, i: number): puzzleArray => {\n  const emptyIndex = puzzleArr.indexOf(null);\n  if (!isAdjacentIdx(emptyIndex, i)) return puzzleArr;\n  const newPuzzleArr = [...puzzleArr];\n  newPuzzleArr[emptyIndex] = puzzleArr[i];\n  newPuzzleArr[i] = null;\n  return newPuzzleArr;\n};\n\nexport const randomMove = (puzzleArr: puzzleArray): puzzleArray => {\n  return moveSquare(puzzleArr, randElement(getMovableIndices(puzzleArr)));\n};\n\nexport const canMoveSquare = (puzzleArr: puzzleArray, i: number): boolean => {\n  const emptyIndex = puzzleArr.indexOf(null);\n  return isAdjacentIdx(emptyIndex, i);\n};\n\nexport const getMoveRecord = (puzzleArr: puzzleArray, i: number): MoveRecord | null => {\n  const emptyIndex = puzzleArr.indexOf(null);\n  if (!isAdjacentIdx(emptyIndex, i)) return null;\n  return {\n    position: puzzleArr[i] as number,\n    direction: getDirection(i, emptyIndex),\n  };\n};\n\nexport const getMovableIndices = (puzzleArr: puzzleArray, emptyIndex: number = puzzleArr.indexOf(null)): number[] => {\n  const movableIndices: number[] = [];\n  const emptyCoord = getCoords(emptyIndex);\n  for (let i = 0; i < puzzleArr.length; i++) {\n    if (isAdjacentCoord(getCoords(i), emptyCoord)) {\n      movableIndices.push(i);\n    }\n  }\n  return movableIndices;\n};\n\nexport type puzzleArray = (number | null)[];\nexport type coord = [number, number];\n\nexport const getRow = (i: number): number => Math.floor(i / 4);\nexport const getColumn = (i: number): number => i % 4;\nexport const getCoords = (i: number): coord => [getColumn(i), getRow(i)];\nexport const isAdjacentCoord = (a: coord, b: coord): boolean => Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1]) === 1;\nexport const isAdjacentIdx = (a: number, b: number): boolean => isAdjacentCoord(getCoords(a), getCoords(b));\n\nexport const isSorted = (arr: puzzleArray): boolean => {\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] !== i + 1) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const randInt = (min = 0, max = 9): number => {\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];\n\nexport const reverseArr = <T>(array: T[]): T[] => array.slice().reverse();\n\nexport const isObjectEmpty = (obj: Record<string, unknown>): boolean => {\n  for (const i in obj) return false;\n  return true;\n};\n\nexport enum Direction {\n  UP,\n  RIGHT,\n  DOWN,\n  LEFT,\n}\n\nexport interface MoveRecord {\n  position: number;\n  direction: Direction;\n}\nconst getDirection = (indexToMove: number, emptyIndex: number): Direction => {\n  const diff = indexToMove - emptyIndex;\n  switch (diff) {\n    case 1:\n      return Direction.LEFT;\n    case -1:\n      return Direction.RIGHT;\n    case 4:\n      return Direction.UP;\n    case -4:\n    default:\n      return Direction.DOWN;\n  }\n};\n","class SillyGooseError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\n  }\n}\n\nexport default SillyGooseError;\n","import { randElement } from './puzzleArr';\n\nexport interface Image {\n  fileName: string;\n  attribution: string;\n}\n\nexport const images: Image[] = [\n  {\n    fileName: 'intricate-explorer-nSk4ko0uUjA-unsplash.jpg',\n    attribution:\n      'Photo by <a href=\"https://unsplash.com/@intricateexplorer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Intricate Explorer</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\n  },\n  {\n    fileName: 'neven-krcmarek-9dTg44Qhx1Q-unsplash.jpg',\n    attribution:\n      'Photo by <a href=\"https://unsplash.com/@nevenkrcmarek?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Neven Krcmarek</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\n  },\n  {\n    fileName: 'michael-payne-2lQKpLMJpvw-unsplash.jpeg',\n    attribution:\n      'Photo by <a href=\"https://unsplash.com/@mpayne66?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Michael Payne</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\n  },\n];\n\nexport const getRandomImage = (): Image => randElement(images);\n","import React, { ReactNode } from 'react';\nimport styles from './NumberSquare.module.css';\nimport classNames from 'classnames';\nimport { Image } from '../helpers/images';\nimport { Direction } from '../helpers/puzzleArr';\n\ninterface NumberSquareProps {\n  handleClick?: () => void;\n  children?: ReactNode;\n  isInPlace: boolean;\n  image: Image;\n  position: number;\n  movedDirection: Direction | null;\n  sorted: boolean;\n}\n\nconst emptyPostionValue = 16;\n\nconst NumberSquare: React.FC<NumberSquareProps> = (props: NumberSquareProps) => {\n  const { children, handleClick, isInPlace, image, position, movedDirection, sorted } = props;\n\n  const row = Math.floor((position - 1) / 4);\n  const col = (position - 1) % 4;\n  const animationClass = movedDirection !== null ? `slide${Direction[movedDirection]}` : '';\n\n  const numberSquareClass = classNames(\n    {\n      clickable: !sorted && Boolean(handleClick),\n      [styles.empty]: position === emptyPostionValue,\n      [styles.inPlace]: isInPlace,\n      [styles.slideFromBelow]: position === 15,\n      [styles.sorted]: sorted,\n    },\n    styles.numberSquare,\n    styles[animationClass],\n  );\n\n  const style =\n    position === emptyPostionValue\n      ? {}\n      : {\n          backgroundImage: !!children ? `url(\"/images/${image.fileName}\")` : '',\n          backgroundSize: '400% 400%',\n          backgroundPosition: `${col * 33.33}% ${row * 33.33}%`,\n        };\n\n  return (\n    <div className={numberSquareClass} onClick={handleClick} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default NumberSquare;\n","import React, { useEffect, useState } from 'react';\nimport { getRandomImage } from '../helpers/images';\n\nimport {\n  canMoveSquare,\n  getMoveRecord,\n  getShuffledPuzzleArr,\n  // getSortedPuzzleArr,\n  isSorted,\n  MoveRecord,\n  moveSquare,\n  puzzleArray,\n} from '../helpers/puzzleArr';\n// import { solve } from '../helpers/solver';\nimport NumberSquare from './NumberSquare';\nimport styles from './SlidePuzzle.module.css';\n\nconst SlidePuzzle: React.FC = () => {\n  const [puzzleArr, setPuzzleArr] = useState(() => getShuffledPuzzleArr() as puzzleArray);\n  const [image, setImage] = useState(() => getRandomImage());\n  const [lastMove, setLastMove] = useState(() => null as MoveRecord | null);\n\n  const sorted = isSorted(puzzleArr);\n\n  // console.log('lastMove', lastMove);\n\n  const handleClick = (i: number) => {\n    if (canMoveSquare(puzzleArr, i)) {\n      return () => {\n        setLastMove(getMoveRecord(puzzleArr, i));\n        setPuzzleArr(moveSquare(puzzleArr, i));\n      };\n    } else if (sorted) {\n      return reset;\n    } else return undefined;\n  };\n\n  const reset = () => {\n    console.log('reset!');\n    setImage(getRandomImage());\n    setLastMove(null);\n    setPuzzleArr(getShuffledPuzzleArr());\n  };\n\n  const squares = puzzleArr.map((n, i) => (\n    <NumberSquare\n      key={`numSquare-${i}-${n}`}\n      handleClick={handleClick(i)}\n      isInPlace={i + 1 === n}\n      image={image}\n      position={n === null ? 16 : n}\n      movedDirection={n === lastMove?.position ? lastMove.direction : null}\n      sorted={sorted}\n    >\n      {n ? n : ''}\n    </NumberSquare>\n  ));\n\n  useEffect(() => {\n    if (sorted) {\n      console.log('sorted!');\n    } else {\n      // console.log(solve(puzzleArr));\n    }\n  }, [puzzleArr, sorted]);\n\n  const style = sorted\n    ? {\n        backgroundImage: `url(\"/images/${image.fileName}\")`,\n        backgroundSize: 'contain',\n      }\n    : {};\n\n  return (\n    <div>\n      <div className={styles.slidePuzzle + ' square'} style={style}>\n        {sorted && <span>Play again?</span>}\n        <div className=\"content\">{squares}</div>\n      </div>\n      <div className={styles.attribution} dangerouslySetInnerHTML={{ __html: image.attribution }}></div>\n    </div>\n  );\n};\n\nexport default SlidePuzzle;\n","import React from 'react';\nimport './App.css';\nimport SlidePuzzle from './components/SlidePuzzle';\nimport { populateSolutionMap } from './helpers/solver';\n\n// populateSolutionMap();\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <SlidePuzzle></SlidePuzzle>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}