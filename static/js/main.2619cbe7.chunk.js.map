{"version":3,"sources":["components/SlidePuzzle.module.css","components/NumberSquare.module.css","helpers/puzzleArr.ts","helpers/SillyGooseError.ts","helpers/images.ts","components/NumberSquare.tsx","components/SlidePuzzle.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Direction","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","isInPosition","n","i","getShuffledPuzzleArr","a","randomMove","some","moveSquare","puzzleArr","emptyIndex","indexOf","isAdjacentIdx","newPuzzleArr","randElement","getMovableIndices","movableIndices","emptyCoord","getCoords","length","isAdjacentCoord","push","getRow","Math","floor","getColumn","b","abs","min","max","ceil","random","randInt","getDirection","indexToMove","LEFT","RIGHT","UP","DOWN","images","fileName","attribution","getRandomImage","NumberSquare","props","children","handleClick","isInPlace","image","position","movedDirection","sorted","row","col","animationClass","numberSquareClass","classNames","clickable","Boolean","styles","empty","inPlace","slideFromBelow","numberSquare","style","backgroundImage","backgroundSize","backgroundPosition","className","onClick","SlidePuzzle","useState","setPuzzleArr","setImage","lastMove","setLastMove","arr","isSorted","canMoveSquare","direction","getMoveRecord","reset","console","log","squares","map","useEffect","slidePuzzle","dangerouslySetInnerHTML","__html","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2619cbe7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidePuzzle\":\"SlidePuzzle_slidePuzzle__29Azw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberSquare\":\"NumberSquare_numberSquare__2MGXT\",\"empty\":\"NumberSquare_empty__1pEnc\",\"inPlace\":\"NumberSquare_inPlace__2C206\",\"sorted\":\"NumberSquare_sorted__utwwI\",\"row-0\":\"NumberSquare_row-0__T_wQ3\",\"slideLEFT\":\"NumberSquare_slideLEFT__1U-ve\",\"slide-from-right\":\"NumberSquare_slide-from-right__238ry\",\"slideDOWN\":\"NumberSquare_slideDOWN__cvY1S\",\"slide-from-above\":\"NumberSquare_slide-from-above__5BSJb\",\"slideRIGHT\":\"NumberSquare_slideRIGHT__2aIUw\",\"slide-from-left\":\"NumberSquare_slide-from-left__2fNnZ\",\"slideUP\":\"NumberSquare_slideUP__31rKi\",\"slide-from-below\":\"NumberSquare_slide-from-below__1fpST\"};","import SillyGooseError from './SillyGooseError';\r\n\r\nexport const getSortedPuzzleArr = (): puzzleArray => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, null];\r\n\r\nexport const puzzleToString = (arr: puzzleArray): string => arr.map(valToString).join('');\r\nexport const stringToPuzzle = (str: string): puzzleArray => str.split('').map(stringToVal);\r\n\r\nexport const valToString = (n: number | null): string => n?.toString(16) || '0';\r\nexport const stringToVal = (s: string): number | null => {\r\n  const n = parseInt(s, 16);\r\n  if (!n) return null;\r\n  return n;\r\n};\r\n\r\nexport const isInPosition = (n: number | null, i: number): boolean => {\r\n  if (n === null) return false;\r\n  return n - 1 === i;\r\n};\r\n\r\nexport const getShuffledPuzzleArr = (): puzzleArray => {\r\n  let a = getSortedPuzzleArr();\r\n  for (let i = 0; i < 10_000; i++) {\r\n    a = randomMove(a);\r\n  }\r\n\r\n  while (a.some(isInPosition)) {\r\n    a = randomMove(a);\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\nexport const moveSquare = (puzzleArr: puzzleArray, i: number): puzzleArray => {\r\n  const emptyIndex = puzzleArr.indexOf(null);\r\n  if (!isAdjacentIdx(emptyIndex, i)) return puzzleArr;\r\n  const newPuzzleArr = [...puzzleArr];\r\n  newPuzzleArr[emptyIndex] = puzzleArr[i];\r\n  newPuzzleArr[i] = null;\r\n  return newPuzzleArr;\r\n};\r\n\r\nexport const randomMove = (puzzleArr: puzzleArray): puzzleArray => {\r\n  return moveSquare(puzzleArr, randElement(getMovableIndices(puzzleArr)));\r\n};\r\n\r\nexport const canMoveSquare = (puzzleArr: puzzleArray, i: number): boolean => {\r\n  const emptyIndex = puzzleArr.indexOf(null);\r\n  return isAdjacentIdx(emptyIndex, i);\r\n};\r\n\r\nexport const getMoveRecord = (puzzleArr: puzzleArray, i: number): MoveRecord | null => {\r\n  const emptyIndex = puzzleArr.indexOf(null);\r\n  if (!isAdjacentIdx(emptyIndex, i)) return null;\r\n  return {\r\n    position: puzzleArr[i] as number,\r\n    direction: getDirection(i, emptyIndex),\r\n  };\r\n};\r\n\r\nexport const getMovableIndices = (puzzleArr: puzzleArray, emptyIndex: number = puzzleArr.indexOf(null)): number[] => {\r\n  const movableIndices: number[] = [];\r\n  const emptyCoord = getCoords(emptyIndex);\r\n  for (let i = 0; i < puzzleArr.length; i++) {\r\n    if (isAdjacentCoord(getCoords(i), emptyCoord)) {\r\n      movableIndices.push(i);\r\n    }\r\n  }\r\n  return movableIndices;\r\n};\r\n\r\nexport type puzzleArray = (number | null)[];\r\nexport type coord = [number, number];\r\n\r\nexport const getRow = (i: number): number => Math.floor(i / 4);\r\nexport const getColumn = (i: number): number => i % 4;\r\nexport const getCoords = (i: number): coord => [getColumn(i), getRow(i)];\r\nexport const isAdjacentCoord = (a: coord, b: coord): boolean => Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1]) === 1;\r\nexport const isAdjacentIdx = (a: number, b: number): boolean => isAdjacentCoord(getCoords(a), getCoords(b));\r\n\r\nexport const isSorted = (arr: puzzleArray): boolean => {\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    if (arr[i] !== i + 1) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const randInt = (min = 0, max = 9): number => {\r\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];\r\n\r\nexport const reverseArr = <T>(array: T[]): T[] => array.slice().reverse();\r\n\r\nexport const isObjectEmpty = (obj: Record<string, unknown>): boolean => {\r\n  for (const i in obj) return false;\r\n  return true;\r\n};\r\n\r\nexport enum Direction {\r\n  UP,\r\n  RIGHT,\r\n  DOWN,\r\n  LEFT,\r\n}\r\n\r\nexport interface MoveRecord {\r\n  position: number;\r\n  direction: Direction;\r\n}\r\nconst getDirection = (indexToMove: number, emptyIndex: number): Direction => {\r\n  const diff = indexToMove - emptyIndex;\r\n  switch (diff) {\r\n    case 1:\r\n      return Direction.LEFT;\r\n    case -1:\r\n      return Direction.RIGHT;\r\n    case 4:\r\n      return Direction.UP;\r\n    case -4:\r\n    default:\r\n      return Direction.DOWN;\r\n  }\r\n};\r\n","class SillyGooseError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n\r\n    // Set the prototype explicitly.\r\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\r\n  }\r\n}\r\n\r\nexport default SillyGooseError;\r\n","import { randElement } from './puzzleArr';\r\n\r\nexport interface Image {\r\n  fileName: string;\r\n  attribution: string;\r\n}\r\n\r\nexport const images: Image[] = [\r\n  {\r\n    fileName: 'intricate-explorer-nSk4ko0uUjA-unsplash.jpg',\r\n    attribution:\r\n      'Photo by <a href=\"https://unsplash.com/@intricateexplorer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Intricate Explorer</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\r\n  },\r\n  {\r\n    fileName: 'neven-krcmarek-9dTg44Qhx1Q-unsplash.jpg',\r\n    attribution:\r\n      'Photo by <a href=\"https://unsplash.com/@nevenkrcmarek?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Neven Krcmarek</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\r\n  },\r\n  {\r\n    fileName: 'michael-payne-2lQKpLMJpvw-unsplash.jpeg',\r\n    attribution:\r\n      'Photo by <a href=\"https://unsplash.com/@mpayne66?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Michael Payne</a> on <a href=\"/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>',\r\n  },\r\n];\r\n\r\nexport const getRandomImage = (): Image => randElement(images);\r\n","import React, { ReactNode } from 'react';\r\nimport styles from './NumberSquare.module.css';\r\nimport classNames from 'classnames';\r\nimport { Image } from '../helpers/images';\r\nimport { Direction } from '../helpers/puzzleArr';\r\n\r\ninterface NumberSquareProps {\r\n  handleClick?: () => void;\r\n  children?: ReactNode;\r\n  isInPlace: boolean;\r\n  image: Image;\r\n  position: number;\r\n  movedDirection: Direction | null;\r\n  sorted: boolean;\r\n}\r\n\r\nconst emptyPostionValue = 16;\r\n\r\nconst NumberSquare: React.FC<NumberSquareProps> = (props: NumberSquareProps) => {\r\n  const { children, handleClick, isInPlace, image, position, movedDirection, sorted } = props;\r\n\r\n  const row = Math.floor((position - 1) / 4);\r\n  const col = (position - 1) % 4;\r\n  const animationClass = movedDirection !== null ? `slide${Direction[movedDirection]}` : '';\r\n\r\n  const numberSquareClass = classNames(\r\n    {\r\n      clickable: !sorted && Boolean(handleClick),\r\n      [styles.empty]: position === emptyPostionValue,\r\n      [styles.inPlace]: isInPlace,\r\n      [styles.slideFromBelow]: position === 15,\r\n      [styles.sorted]: sorted,\r\n    },\r\n    styles.numberSquare,\r\n    styles[animationClass],\r\n  );\r\n\r\n  const style =\r\n    position === emptyPostionValue\r\n      ? {}\r\n      : {\r\n          backgroundImage: `url(\"/images/${image.fileName}\")`,\r\n          backgroundSize: '400% 400%',\r\n          backgroundPosition: `${col * 33.33}% ${row * 33.33}%`,\r\n        };\r\n\r\n  return (\r\n    <div className={numberSquareClass} onClick={handleClick} style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberSquare;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getRandomImage } from '../helpers/images';\r\n\r\nimport {\r\n  canMoveSquare,\r\n  getMoveRecord,\r\n  getShuffledPuzzleArr,\r\n  // getSortedPuzzleArr,\r\n  isSorted,\r\n  MoveRecord,\r\n  moveSquare,\r\n  puzzleArray,\r\n} from '../helpers/puzzleArr';\r\n// import { solve } from '../helpers/solver';\r\nimport NumberSquare from './NumberSquare';\r\nimport styles from './SlidePuzzle.module.css';\r\n\r\nconst SlidePuzzle: React.FC = () => {\r\n  const [puzzleArr, setPuzzleArr] = useState(() => getShuffledPuzzleArr() as puzzleArray);\r\n  const [image, setImage] = useState(() => getRandomImage());\r\n  const [lastMove, setLastMove] = useState(() => null as MoveRecord | null);\r\n\r\n  const sorted = isSorted(puzzleArr);\r\n\r\n  // console.log('lastMove', lastMove);\r\n\r\n  const handleClick = (i: number) => {\r\n    if (canMoveSquare(puzzleArr, i)) {\r\n      return () => {\r\n        setLastMove(getMoveRecord(puzzleArr, i));\r\n        setPuzzleArr(moveSquare(puzzleArr, i));\r\n      };\r\n    } else if (sorted) {\r\n      return reset;\r\n    } else return undefined;\r\n  };\r\n\r\n  const reset = () => {\r\n    console.log('reset!');\r\n    setImage(getRandomImage());\r\n    setLastMove(null);\r\n    setPuzzleArr(getShuffledPuzzleArr());\r\n  };\r\n\r\n  const squares = puzzleArr.map((n, i) => (\r\n    <NumberSquare\r\n      key={`numSquare-${i}-${n}`}\r\n      handleClick={handleClick(i)}\r\n      isInPlace={i + 1 === n}\r\n      image={image}\r\n      position={n === null ? 16 : n}\r\n      movedDirection={n === lastMove?.position ? lastMove.direction : null}\r\n      sorted={sorted}\r\n    >\r\n      {n ? n : ''}\r\n    </NumberSquare>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    if (sorted) {\r\n      console.log('sorted!');\r\n    } else {\r\n      // console.log(solve(puzzleArr));\r\n    }\r\n  }, [puzzleArr, sorted]);\r\n\r\n  const style = sorted\r\n    ? {\r\n        backgroundImage: `url(\"/images/${image.fileName}\")`,\r\n        backgroundSize: 'contain',\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.slidePuzzle + ' square'} style={style}>\r\n        {sorted && <span>Play again?</span>}\r\n        <div className=\"content\">{squares}</div>\r\n      </div>\r\n      <div className={styles.attribution} dangerouslySetInnerHTML={{ __html: image.attribution }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlidePuzzle;\r\n","import React from 'react';\nimport './App.css';\nimport SlidePuzzle from './components/SlidePuzzle';\nimport { populateSolutionMap } from './helpers/solver';\n\n// populateSolutionMap();\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <SlidePuzzle></SlidePuzzle>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}